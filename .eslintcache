[{"/Users/bekirinan/Downloads/bingo-app/src/reportWebVitals.js":"1","/Users/bekirinan/Downloads/bingo-app/src/App.js":"2","/Users/bekirinan/Downloads/bingo-app/src/screens/bingo/Home.js":"3","/Users/bekirinan/Downloads/bingo-app/src/index.js":"4","/Users/bekirinan/Downloads/bingo-app/src/screens/Model/BingoModel.js":"5","/Users/bekirinan/Downloads/bingo-app/src/styles/bingoStyles/homeStyles.js":"6"},{"size":362,"mtime":1611501110287,"results":"7","hashOfConfig":"8"},{"size":215,"mtime":1611686650724,"results":"9","hashOfConfig":"8"},{"size":3529,"mtime":1612666698933,"results":"10","hashOfConfig":"8"},{"size":500,"mtime":1611501110286,"results":"11","hashOfConfig":"8"},{"size":5927,"mtime":1612655888314,"results":"12","hashOfConfig":"8"},{"size":396,"mtime":1611717202583,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"w45mh2",{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"18","messages":"19","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/bekirinan/Downloads/bingo-app/src/reportWebVitals.js",[],"/Users/bekirinan/Downloads/bingo-app/src/App.js",[],"/Users/bekirinan/Downloads/bingo-app/src/screens/bingo/Home.js",["27"],"import React, {useState, useEffect} from 'react';\nimport '../../styles/bingoStyles/Home.scss'\nimport {\n  data, \n  bingoPossibilityRowData, \n  bingoPossibilityColData, \n  bingoPossibilityDiagData \n} from '../Model/BingoModel';\nimport Confetti from 'react-confetti';\nimport {useWindowSize} from 'react-use';\nvar _ = require('underscore');\n\nfunction Home() {\n  let colBingolist = [];\n  const [modelData, setModelData] = useState(data);\n  const {width, height} = useWindowSize();\n  const [open, setOpen] = useState(false);\n  const [notes, setNotes] = useState([]);\n  const [bingoPossibilityRow] = useState(bingoPossibilityRowData);\n  const [bingoPossibilityCol] = useState(bingoPossibilityColData);\n  const [bingoPossibilityDiag] = useState(bingoPossibilityDiagData);\n\n  useEffect(() => {\n    if (notes.indexOf(12) === -1) {\n      setNotes([...notes, 12]);\n    }\n    checkRowBingo();\n    checkColBingo();\n    checkDiagBingo();\n  }, [notes]);\n\n  const checkColBingo = () => {\n    notes.sort(function(a, b){return a-b});\n      for (let i = 0; i < bingoPossibilityCol.length; i++) {\n        const element = bingoPossibilityCol[i];\n        if (_.intersection(notes, element.checkArray).length === element.checkArray.length && element.isBingo === false) {\n          element.isBingo = true;\n          handleOpen();\n        }\n      }\n  }\n\n  const checkRowBingo = () => {\n    notes.sort(function(a, b){return a-b});\n      for (let i = 0; i < bingoPossibilityRow.length; i++) {\n        const element = bingoPossibilityRow[i];\n        if (_.intersection(notes, element.checkArray).length === element.checkArray.length && element.isBingo === false) {\n          element.isBingo = true;\n          handleOpen();\n        }\n      }\n  }\n\n  const checkDiagBingo = () => {\n    notes.sort(function(a, b){return a-b});\n      for (let i = 0; i < bingoPossibilityDiag.length; i++) {\n        const element = bingoPossibilityDiag[i];\n        if (_.intersection(notes, element.checkArray).length === element.checkArray.length && element.isBingo === false) {\n          element.isBingo = true;\n          handleOpen();\n        }\n      }\n  }\n\n  const addData = (data) => {\n      for (let data of modelData) {\n        if (data.selected) {\n          colBingolist.push(data.id)\n        }\n      }\n      if (notes.indexOf(data.id) === -1) {\n        setNotes([...notes, data.id]);\n      }\n  }\n\n\n  const choose = (id) => {\n    let render = [...modelData];\n    let d;\n    for (let data of render) {\n        if (data.id === id) {\n          data.selected = data.selected == null ? true : !data.selected;\n          d = data;\n        }\n    }\n\n    setModelData(render)\n    addData(d);\n  }\n\n  const handleOpen = () => {\n    setOpen(true);\n    setTimeout(() => {\n      setOpen(false);\n  }, 5000);\n  };\n\n  return (\n    <div className=\"container\">\n        {modelData.map(data => (\n          data.id === 12 ? \n          <div className='freeSlot'>\n            <img src=\"https://www.playbingoaustralia.com/wp-content/uploads/2015/02/Bingo-Night.png\" alt=\"freeImage\" width=\"100%\"></img>\n          </div> : \n          <div key={data.id} onClick={() => choose(data.id)} className={data.selected ? 'itemSelected' : 'item'}>\n            <div className={data.selected ? 'numberSelected' : 'number'}>\n              <p>{data.index}</p>\n            </div>\n            <div className=\"text\">\n              <p>{data.item}</p>\n            </div>\n          </div>\n      ))}\n     { open ? <Confetti\n      width={width}\n      height={height}\n    /> : null}\n    </div>\n  );\n}\n\n\nexport default Home;\n","/Users/bekirinan/Downloads/bingo-app/src/index.js",[],"/Users/bekirinan/Downloads/bingo-app/src/screens/Model/BingoModel.js",[],"/Users/bekirinan/Downloads/bingo-app/src/styles/bingoStyles/homeStyles.js",[],{"ruleId":"28","severity":1,"message":"29","line":30,"column":6,"nodeType":"30","endLine":30,"endColumn":13,"suggestions":"31"},"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'checkColBingo', 'checkDiagBingo', and 'checkRowBingo'. Either include them or remove the dependency array.","ArrayExpression",["32"],{"desc":"33","fix":"34"},"Update the dependencies array to be: [checkColBingo, checkDiagBingo, checkRowBingo, notes]",{"range":"35","text":"36"},[928,935],"[checkColBingo, checkDiagBingo, checkRowBingo, notes]"]